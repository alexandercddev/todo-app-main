{"version":3,"sources":["reducers/toDoReducer.js","components/ToDoListItem.js","components/ToDoList.js","components/ToDoApp.js","App.js","reportWebVitals.js","index.js"],"names":["toDoReducer","state","action","type","payload","filter","item","id","map","done","checked","ToDoListItem","description","handleDelete","handleToggle","handleActive","className","onChange","onClick","ToDoList","todos","length","todo","index","init","JSON","parse","localStorage","getItem","ToDoApp","useReducer","dispath","useState","mode","setMode","useEffect","setItem","stringify","console","log","placeholder","name","autoComplete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3608484.chunk.js","sourcesContent":["\r\nconst toDoReducer = ( state = [], action) => {\r\n    switch (action?.type) {\r\n        case 'add': \r\n            return [ ...state, action.payload]; \r\n        case 'delete': \r\n            return state.filter( item => item.id !== action.payload);\r\n        case 'toggle':\r\n            return state.map( item => (\r\n                ( item.id === action.payload )\r\n                ? {...item, done: !item.done}\r\n                : item\r\n            ));\r\n        case 'checked':\r\n            return state.map( item => (\r\n                ( item.id === action.payload )\r\n                ? {...item, checked: !item.checked}\r\n                : item\r\n            )); \r\n        default:\r\n            return  state;\r\n    }\r\n}\r\n\r\nexport {\r\n    toDoReducer\r\n}\r\n","import React from 'react';\r\n\r\nconst ToDoListItem = ({ id, description, done, checked, handleDelete, handleToggle, handleActive}) => {\r\n    return ( \r\n        <>\r\n            <li className='li-todo'>\r\n                <label className=\"container-checkbox\">\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        className='checkbox' \r\n                        checked={checked}\r\n                        onChange={() => {handleActive(id)}}/>\r\n                    <span className=\"checkmark\"></span>\r\n                </label> \r\n                <span \r\n                    className={`description ${done && 'complete'}`}\r\n                    onClick={()=> {handleToggle(id)}}\r\n                >{description}</span>\r\n                <button \r\n                    className='btn btn-close'\r\n                    onClick={() => {handleDelete(id)}}\r\n                ></button>\r\n            </li>\r\n            <div className='separator'></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ToDoListItem;","import React from 'react';\r\nimport ToDoListItem from './ToDoListItem';\r\n\r\nconst ToDoList = ({ todos, handleDelete, handleToggle, handleActive}) => {\r\n    return ( \r\n        <ul className='ul-todos'>\r\n            {todos.length === 0 \r\n                ? <div className='li-todo'> Not records </div>\r\n                : todos.map((todo, index) => {\r\n                    return (<ToDoListItem \r\n                        key={`todo-${index}`}\r\n                        {...todo}\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                        handleActive={handleActive}\r\n                    ></ToDoListItem>);\r\n                })\r\n            } \r\n        </ul> \r\n    );\r\n}\r\n\r\nexport default ToDoList;","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { toDoReducer } from '../reducers/toDoReducer';\r\nimport ToDoList from './ToDoList';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('todos')) || [\r\n        {\r\n            id: 1,\r\n            description: 'Learn HTML',\r\n            done: true,\r\n            checked: false,\r\n        },\r\n        {\r\n            id: 2,\r\n            description: 'Learn CSS',\r\n            done: false,\r\n            checked: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            description: 'Learn JavaScript',\r\n            done: false,\r\n            checked: false,\r\n        },\r\n        {\r\n            id: 4,\r\n            description: 'Learn React',\r\n            done: true,\r\n            checked: false,\r\n        },\r\n        {\r\n            id: 5,\r\n            description: 'Learn NextJS',\r\n            done: true,\r\n            checked: true,\r\n        }\r\n    ];\r\n};\r\n\r\nconst ToDoApp = () => {\r\n    const [ todos, dispath ] = useReducer(toDoReducer, [], init);\r\n    const [ mode, setMode] = useState('moon')\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n        console.log('Me renderice de nuevo me dio ansiedad')\r\n    }, [todos]);\r\n    const handleMode = () => setMode(mode === 'moon' ? 'sun' : 'moon');\r\n    const handleAdd = (newTodo) => {\r\n        dispath({\r\n            type: 'checked',\r\n            payload: newTodo\r\n        });\r\n    }\r\n    const handleActive = (id) => {\r\n        dispath({\r\n            type: 'checked',\r\n            payload: id\r\n        });\r\n    }\r\n    const handleDelete = (id) => {\r\n        dispath({\r\n            type: 'delete',\r\n            payload: id\r\n        });\r\n    }\r\n    const handleToggle = (id) => {\r\n        dispath({\r\n            type: 'toggle',\r\n            payload: id\r\n        });\r\n    }\r\n    return (\r\n        <div className={`app ${mode}`}> \r\n            <div className={`container ${mode}`}>\r\n                <div className='box box-header'>\r\n                    <h1 className='title'>TODO</h1> \r\n                    <button \r\n                        onClick={handleMode}\r\n                        className={`btn btn-${mode}`}\r\n                    ></button>\r\n                </div>\r\n                <div className={`box box-content ${mode}`}>\r\n                    <form className='form'>\r\n                        <label className=\"container-checkbox\">\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                className='checkbox' />\r\n                            <span className=\"checkmark\"></span>\r\n                        </label> \r\n                        <input \r\n                            type='text' \r\n                            placeholder='Create a new todo...' \r\n                            name=\"description\"\r\n                            className=\"form-control\" \r\n                            autoComplete=\"off\" \r\n                        ></input>\r\n                    </form>\r\n                </div>\r\n                <div className={`box box-content ${mode}`}>\r\n                    <ToDoList \r\n                        todos={todos}\r\n                        handleActive={handleActive}\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                    />\r\n                    <div className='footer-box'>\r\n                        <span>{todos.length} items left</span>\r\n                        <div className='footer-center'>\r\n                            <button className='action'>All</button>\r\n                            <button className='action'>Active</button>\r\n                            <button className='action'>Completed</button> \r\n                        </div>\r\n                        <button className='action'>Clear Complete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default ToDoApp;","import './assets/styles/style.scss'; \nimport ToDoApp from './components/ToDoApp';\n\nconst App = () => {\n  return (<ToDoApp></ToDoApp>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}